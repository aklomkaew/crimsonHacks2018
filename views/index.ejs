<!doctype html>
<html lang="en">
<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

  <meta name="viewport" content="width=device-width, initial-scale=1">

  <style>
   #banner {
    margin: 0 auto;
    padding: .1%;
    background-color: #fbf7cb;
  }

   /* Banner */
   #banner h1 {font-size: 3.571em; line-height: 80%;}
   #banner h1 a:link, #banner h1 a:visited {
    color: #000305;
    display: block;
    font-weight: bold;
    margin: 2%;
    text-decoration: none;
    width: 427px;
  }
   #banner h1 a:hover, #banner h1 a:active {
    background: none;
    color: #C74350;
    text-shadow: none;
  }

   #banner h1 strong {font-size: 0.36em; font-weight: normal;}

    #map {
        height:100%;
        width:100%
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }

    body {font-family: Arial;}

    /* Style the tab */
    .tab {
        overflow: hidden;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
    }

    /* Style the buttons inside the tab */
    .tab button {
        background-color: inherit;
        float: left;
        border: none;
        outline: none;
        cursor: pointer;
        padding: 14px 16px;
        transition: 0.3s;
        font-size: 17px;
    }

    /* Change background color of buttons on hover */
    .tab button:hover {
        background-color: #ddd;
    }

    /* Create an active/current tablink class */
    .tab button.active {
        background-color: #ccc;
    }

    /* Style the tab content */
    .tabcontent {
        display: none;
        padding: 6px 12px;
        border: 1px solid #ccc;
        border-top: none;
    }

    /* Style the close button */
    .topright {
        float: right;
        cursor: pointer;
        font-size: 28px;
    }

    .topright:hover {color: red;}`
  </style>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css" integrity="sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4" crossorigin="anonymous">
    <title>CRIMSONHACK 2018</title>
</head>
  <body>
  <header id="banner" class="body">
    <br><h1><a href="#">Trip Planner <strong>v(1.0.0)</strong></a></h1>

    <div class="tab">
      <button class="tablinks" onclick="openTab(event, 'Home')" id="defaultOpen">Home</button>
      <button class="tablinks" onclick="openTab(event, 'GMap')">Google Map</button>
      <button class="tablinks" onclick="openTab(event, 'NearbyPlaces')">Nearby Places</button>
    </div>
  </header>

    <div id="Home" class="tabcontent">
      <span onclick="this.parentElement.style.display='none'" class="topright">&times</span>
      <br><h2>Welcome to our homepage</h2>
      <p>Please navigate to the Google Map tab</p>
    </div>

    <div id="GMap" class="tabcontent" style="height:100%; width:100%">
      <span onclick="this.parentElement.style.display='none'" class="topright">&times</span>
      <br>Radius<input type="text" name="initial radius" id = 'input1'></input><br><br>
      <button onclick="afterInitMap()">Continue</button><br><br>
      <div id="map"></div>
    </div>

    <div id="NearbyPlaces" class="tabcontent" onclick="triggerNearby">
      <span onclick="this.parentElement.style.display='none'" class="topright">&times</span>
      
    </div>

    <script>
      var map, infoWindow, service;
      var origins,destinations;
      var value,result;

      document.getElementById("defaultOpen").click();

      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: -34.397, lng: 150.644},
          zoom: 6
        });
      }

      function afterInitMap()
      {
        var radius = document.getElementById('input1').value;

        infoWindow = new google.maps.InfoWindow;

        // Try HTML5 geolocation.
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            doSomething(position.coords.latitude,position.coords.longitude, radius);
            });
        } else {
          // Browser doesn't support Geolocation
          handleLocationError(false, infoWindow, map.getCenter());
        }
        // return [position.coords.latitude,position.coords.longitude]
      }

      function doSomething(lat, lng, radius)
      {
        var pyrmont = {lat: lat, lng: lng};

        map = new google.maps.Map(document.getElementById('map'), {
          center: pyrmont,
          zoom: 15
        });

        infowindow = new google.maps.InfoWindow();
        var service = new google.maps.places.PlacesService(map);
        service.nearbySearch({
          location: pyrmont,
          radius,
          type: ['store']
        }, callback);

        var request = {
          location: pyrmont,
          radius
        };

        //drawToTable(results,request);
        getMatrixFromServer(request.location, render2Darray);

        service = new google.maps.places.PlacesService(map);
        service.nearbySearch({
          location: pyrmont,
          radius,
          type: ['store']
        }, function(results, status){
          if(status == google.maps.places.PlacesServiceStatus.OK)
          {
            //console.log("result = " + results.lat());
            //for (var i = results.length - 1; i >= 0; i--) {
              drawToTable(results,request);
              getMatrixFromServer(pyrmont, render2Darray);
           //}
          }
        });
      }

      function getMatrixFromServer(pyrmont, callback){
        var req = [pyrmont];
        // process data
        //postAjax('/makeMatrix', req, callback);
        //return[lat, lng]
      }

      // function postAjax(url, data, success) {
      //     var params = typeof data == 'string' ? data : Object.keys(data).map(
      //             function(k){ return encodeURIComponent(k) + '=' + encodeURIComponent(data[k]) }
      //         ).join('&');
      //
      //     var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");
      //     xhr.open('POST', url);
      //     xhr.onreadystatechange = function() {
      //         if (xhr.readyState>3 && xhr.status==200) { success(xhr.responseText); }
      //     };
      //     xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
      //     xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
      //     xhr.send(params);
      //     return xhr;
      // }

      function render2Darray(){
          console.log();
      }

      function triggerNearby(){
        // call drawToTable
      }

      function drawToTable(element,origin){
      // var origin1 = new google.maps.LatLng(33.2145855, -87.5454081);
      // var origin2 = "Tuscaloosa, AL";

      // origins: [{lat:33.2145855,lng:-87.5454081}];
      // destinations:[{lat:30.34545463, lng:80.34536534}]
        const table = document.createElement('table');
        document.body.appendChild(table);

        for (var i = 0; i < element.length - 1; i++){

            const tr = document.createElement('tr');

            var td1 = document.createElement('td');
            var td2 = document.createElement('td');
            var td3 = document.createElement('td');
            var td4 = document.createElement('td');

            var text1 = document.createTextNode(element[i].name);
            var text2 = document.createTextNode(element[i].geometry.location.lat());
            var text3 = document.createTextNode(element[i].geometry.location.lng());
            var text4 = document.createTextNode(element[i].rating);

            td1.appendChild(text1);
            td2.appendChild(text2);
            td3.appendChild(text3);
            td4.appendChild(text4);
            // td5.appendChild(text5);

            tr.appendChild(td1);
            tr.appendChild(td2);
            tr.appendChild(td3);
            tr.appendChild(td4);

         doCall(origin.location.lat,origin.location.lng, element[i], function(response){
              value = response.rows["0"].elements["0"].distance.text;

              var text5 = document.createTextNode(value);
              var td5 = document.createElement('td');
              td5.appendChild(text5);
              tr.appendChild(td5);
              table.appendChild(tr);
            });
        }
      }

      function doCall(lat,lon, element, callback2) {
        var service = new google.maps.DistanceMatrixService();
         service.getDistanceMatrix(
              {
                origins: [{lat:lat,lng:lon}],
                destinations: [{lat:element.geometry.location.lat(),lng:element.geometry.location.lng()}],
                travelMode: 'DRIVING',
              }, callback2);
      }
      function callback2(response, status) {
            }

      function callback(results, status) {
        if (status === google.maps.places.PlacesServiceStatus.OK) {
          for (var i = 0; i < results.length; i++) {
            createMarker(results[i]);
          }
        }
      }

      function createMarker(place) {
        var placeLoc = place.geometry.location;
        var marker = new google.maps.Marker({
          map: map,
          position: place.geometry.location
        });

        google.maps.event.addListener(marker, 'click', function() {
          infowindow.setContent(place.name);
          infowindow.open(map, this);
        });
      }

      function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                              'Error: The Geolocation service failed.' :
                              'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
      }

    </script>

    <script>
      function openTab(evt, name) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(name).style.display = "block";
        evt.currentTarget.className += " active";
      }
    </script>

    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBQxf2Hc8ftvJJSexvGNqA1cRIEX2KLSE4&callback=initMap&libraries=places">
    </script>
    <!-- <div id="map"></div> -->
    <!-- <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBQxf2Hc8ftvJJSexvGNqA1cRIEX2KLSE4&libraries=places&callback=initMap" async defer></script> -->
    <!-- <script src="https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${n_lat},${n_long}&radius=1500&key=AIzaSyBQxf2Hc8ftvJJSexvGNqA1cRIEX2KLSE4" async defer> </script> -->
    <!-- <script src="https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=-33.867,151.195&radius=1500&key=AIzaSyBQxf2Hc8ftvJJSexvGNqA1cRIEX2KLSE4" async defer> </script> -->

    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js" integrity="sha384-cs/chFZiN24E4KMATLdqdvsezGxaGsi4hLGOzlXwp5UZB1LY//20VyM2taTB4QvJ" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js" integrity="sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm" crossorigin="anonymous"></script>
      <script src="main.js" type="text/javascript"></script>
  </body>
</html>
